# -*- coding: utf-8 -*-
"""validacao_cruzada.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SzoENDt0EYMiiShXYy4iLQGe-48ZNR84
"""

!pip install pandas==2.0.3
!pip install tensorflow==2.15.0
!pip install scikit-learn==1.5.0
!pip install scikeras==0.13.0

import pandas as pd
import tensorflow as tf
import sklearn
import scikeras

pd.__version__, tf.__version__, sklearn.__version__, scikeras.__version__

from scikeras.wrappers import KerasClassifier
from sklearn.model_selection import cross_val_score
from tensorflow.keras.models import Sequential
from tensorflow.keras import backend as k

#previsores
X = pd.read_csv('/content/entradas_breast.csv')
#classe
y = pd.read_csv('/content/saidas_breast.csv')

def criar_rede():
  k.clear_session()
  rede_neural = Sequential([
    tf.keras.layers.InputLayer(shape = (30,)),
    tf.keras.layers.Dense(units = 16, activation = 'relu', kernel_initializer = 'random_uniform'),
    tf.keras.layers.Dense(units = 16, activation = 'relu', kernel_initializer = 'random_uniform'),
    tf.keras.layers.Dense(units = 1, activation = 'sigmoid')
  ])
  otimizador = tf.keras.optimizers.Adam(learning_rate = 0.001, clipvalue= 0.5)
  rede_neural.compile(optimizer = otimizador, loss = 'binary_crossentropy', metrics = ['binary_accuracy'])
  return rede_neural

rede_neural = KerasClassifier(model = criar_rede, epochs = 100, batch_size = 10)

resultados = cross_val_score(estimator = rede_neural, X = X, y = y, cv = 10, scoring = 'accuracy')

resultados

resultados.mean()

resultados.std()